<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Mar 11, 2013 11:55:02 AM by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
    <class name="tutoring.entity.ParaprofessionalSession" table="ParaprofessionalSession" catalog="nbefus_tms">
        <id name="paraprofessionalSessionID" type="java.lang.Integer">
            <column name="paraprofessionalSessionID" />
            <generator class="identity" />
        </id>
        <many-to-one name="paraprofessionalID" class="tutoring.entity.Paraprofessional" fetch="select">
            <column name="paraprofessionalID" not-null="true" />
        </many-to-one>
        <many-to-one name="paraprofessionalCreatorID" class="tutoring.entity.Paraprofessional" fetch="select">
            <column name="paraprofessionalCreatorID" not-null="true" />
        </many-to-one>
        <many-to-one name="clientID" class="tutoring.entity.Client" fetch="select">
            <column name="clientID" not-null="true" />
        </many-to-one>
        <many-to-one name="courseID" class="tutoring.entity.Course" fetch="select">
            <column name="courseID" not-null="true" />
        </many-to-one>
        <property name="timeAndDateEntered" type="timestamp">
            <column name="timeAndDateEntered" length="19" not-null="true" />
        </property>
        <property name="sessionStart" type="timestamp">
            <column name="sessionStart" length="19" not-null="false" />
        </property>
        <property name="sessionEnd" type="timestamp">
            <column name="sessionEnd" length="19" not-null="false" />
        </property>
        <property name="grammarCheck" type="boolean">
            <column name="grammarCheck" not-null="true" />
        </property>
        <property name="notes" type="string">
            <column name="notes" length="65535" />
        </property>
        <many-to-one name="termID" class="tutoring.entity.Term" fetch="select">
            <column name="termID" not-null="true" />
        </many-to-one>
        <many-to-one name="locationID" class="tutoring.entity.Location" fetch="select">
            <column name="locationID" not-null="true" />
        </many-to-one>
    </class>
</hibernate-mapping>
